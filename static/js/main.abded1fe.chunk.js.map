{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpenseFilter.jsx","components/Expenses/ExpenseChart.jsx","components/Expenses/Expense.jsx","components/Expenses/ExpenseForm.jsx","components/Expenses/NewExpense.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","date","day","toLocaleString","month","year","getFullYear","ExpenseItem","title","amount","ExpenseFilter","years","selectedYear","onSelectYear","name","onChange","e","target","value","disabled","hidden","Math","random","sort","map","placeholder","ExpenseChart","chartDataPoints","filteredExpenses","filteredExpense","expenseMonth","getMonth","AreaChart","width","height","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","type","stroke","fill","Expense","useState","Date","toString","setSelectedYear","expenses","filter","expense","getYears","Array","from","Set","length","id","titleReducer","state","action","isValid","trim","amountReducer","dateReducer","ExpenseForm","isFormValid","setIsFormValid","useReducer","titleState","titleDispatcher","amountState","amountDispatcher","dateState","dateDispatcher","isTitleValid","isAmountValid","isDateValid","useEffect","console","log","onSubmit","preventDefault","newExpense","onSubmitExpenseForm","style","color","htmlFor","onBlur","borderColor","min","step","onClick","onCancelEventListener","NewExpense","newExpenseToggleButton","setNewExpenseToggleButton","newExpenseData","onAddNewExpense","isClicked","App","setExpenses","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abded1fe.chunk.js","sourcesContent":["import './Card.scss';\r\n\r\nconst Card = props => {\r\n    const classes = `card ${props.className}`;\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import Card from '../UI/Card';\r\nimport './ExpenseDate.scss';\r\n\r\nconst ExpenseDate = props => {\r\n    const { date } = props;\r\n    const day = date.toLocaleString('en-US', { day: '2-digit' });\r\n    const month = date.toLocaleString('en-US', { month: 'short' });\r\n    const year = date.getFullYear();\r\n    return (\r\n        <Card className=\"expense-date\">\r\n            <div className=\"expense-date_date lead b\">{day}</div>\r\n            <div className=\"expense-date_month small\">{month}</div>\r\n            <div className=\"expense-date_year b small\">{year}</div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nimport './ExpenseItem.scss';\r\n\r\nconst ExpenseItem = props => {\r\n    const { title, amount, date } = props;\r\n    return (\r\n        <Card className=\"expense-item my-1\">\r\n            <div className=\"expense-item_left\">\r\n                <ExpenseDate date={date} />\r\n                <div className=\"expense-item_title mx-4 b\">{title}</div>\r\n            </div>\r\n            <Card className=\"expense-item_amount px-1\">&#8377; {amount}</Card>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpenseFilter.scss';\r\n\r\nconst ExpenseFilter = props => {\r\n    const { years, selectedYear, onSelectYear } = props;\r\n    const onFilterChangeEventHandler = e => onSelectYear(e.target.value);\r\n\r\n    return (\r\n        <div className=\"expense-filter\">\r\n            <p className=\"b\">Filter by year</p>\r\n            <select\r\n                name=\"year\"\r\n                onChange={onFilterChangeEventHandler}\r\n                value={selectedYear}\r\n            >\r\n                <option\r\n                    value={selectedYear}\r\n                    key={Math.random()}\r\n                    disabled\r\n                    hidden\r\n                >\r\n                    {selectedYear}\r\n                </option>\r\n                {years.sort().map(year => (\r\n                    <option placeholder=\"Year\" key={year} value={year}>\r\n                        {year}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import {\r\n    AreaChart,\r\n    Area,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip\r\n} from 'recharts';\r\n\r\nconst ExpenseChart = props => {\r\n    const chartDataPoints = [\r\n        { month: 'Jan', amount: 0 },\r\n        { month: 'Feb', amount: 0 },\r\n        { month: 'Mar', amount: 0 },\r\n        { month: 'Apr', amount: 0 },\r\n        { month: 'May', amount: 0 },\r\n        { month: 'Jun', amount: 0 },\r\n        { month: 'Jul', amount: 0 },\r\n        { month: 'Aug', amount: 0 },\r\n        { month: 'Sep', amount: 0 },\r\n        { month: 'Oct', amount: 0 },\r\n        { month: 'Nov', amount: 0 },\r\n        { month: 'Dec', amount: 0 }\r\n    ];\r\n\r\n    props.filteredExpenses.map(filteredExpense => {\r\n        const expenseMonth = filteredExpense.date.getMonth();\r\n        chartDataPoints[expenseMonth].amount += +filteredExpense.amount;\r\n    });\r\n\r\n    return (\r\n        <AreaChart\r\n            className=\"my-2\"\r\n            width={1200}\r\n            height={250}\r\n            data={chartDataPoints}\r\n        >\r\n            <CartesianGrid strokeDasharray=\".05 .05\" />\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis />\r\n            <Tooltip height={5} />\r\n            <Area\r\n                type=\"monotone\"\r\n                dataKey=\"amount\"\r\n                stroke=\"#8884d8\"\r\n                fill=\"#07ffb5\"\r\n            />\r\n        </AreaChart>\r\n    );\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import { useState } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport Card from '../UI/Card';\r\nimport ExpenseChart from './ExpenseChart';\r\n\r\nimport './Expense.scss';\r\n\r\nconst Expense = props => {\r\n    const [selectedYear, setSelectedYear] = useState(\r\n        new Date().getFullYear().toString()\r\n    );\r\n\r\n    const onSelectYear = selectedYear => {\r\n        setSelectedYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.expenses.filter(\r\n        expense =>\r\n            new Date(expense.date).getFullYear().toString() === selectedYear\r\n    );\r\n\r\n    const getYears = Array.from(\r\n        new Set(\r\n            props.expenses.map(expense => new Date(expense.date).getFullYear())\r\n        )\r\n    );\r\n\r\n    return (\r\n        <Card className=\"bg-dark p-2 text-center\">\r\n            <ExpenseFilter\r\n                years={getYears}\r\n                selectedYear={selectedYear}\r\n                onSelectYear={onSelectYear}\r\n            />\r\n\r\n            <ExpenseChart filteredExpenses={filteredExpenses} />\r\n\r\n            <div className=\"expenses\">\r\n                {(filteredExpenses.length &&\r\n                    filteredExpenses.map(expense => {\r\n                        const { id, title, amount, date } = expense;\r\n                        return (\r\n                            <ExpenseItem\r\n                                key={id}\r\n                                title={title}\r\n                                amount={amount}\r\n                                date={date}\r\n                            />\r\n                        );\r\n                    })) || (\r\n                    <p className=\"text-center py-2\">No Expenses Found</p>\r\n                )}\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Expense;\r\n","import { useEffect } from 'react';\r\nimport { useReducer, useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\n\r\nimport './ExpenseForm.scss';\r\n\r\nconst titleReducer = (state, action) => {\r\n    if (action.type === 'ADD_NEW') {\r\n        return {\r\n            value: action.value,\r\n            isValid: action.value.trim().length > 0\r\n        };\r\n    }\r\n    if (action.type === 'ON_BLUR') {\r\n        return {\r\n            value: state.value,\r\n            isValid: action.value.trim().length > 0\r\n        };\r\n    }\r\n    return { value: '', isValid: false };\r\n};\r\n\r\nconst amountReducer = (state, action) => {\r\n    if (action.type === 'ADD_NEW') {\r\n        return {\r\n            value: action.value,\r\n            isValid: +action.value.trim() > 0\r\n        };\r\n    }\r\n    if (action.type === 'ON_BLUR') {\r\n        return {\r\n            value: state.value,\r\n            isValid: +action.value.trim() > 1\r\n        };\r\n    }\r\n    return { value: '', isValid: false };\r\n};\r\n\r\nconst dateReducer = (state, action) => {\r\n    if (action.type === 'ADD_NEW') {\r\n        return {\r\n            value: action.value,\r\n            isValid: action.value !== ''\r\n        };\r\n    }\r\n    if (action.type === 'ON_BLUR') {\r\n        return {\r\n            value: state.value,\r\n            isValid: action.value !== ''\r\n        };\r\n    }\r\n    return { value: '', isValid: false };\r\n};\r\n\r\nconst ExpenseForm = props => {\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const [titleState, titleDispatcher] = useReducer(titleReducer, {\r\n        value: '',\r\n        isValid: null\r\n    });\r\n    const [amountState, amountDispatcher] = useReducer(amountReducer, {\r\n        value: '',\r\n        isValid: null\r\n    });\r\n    const [dateState, dateDispatcher] = useReducer(dateReducer, {\r\n        value: '',\r\n        isValid: null\r\n    });\r\n\r\n    const { isValid: isTitleValid } = titleState;\r\n    const { isValid: isAmountValid } = amountState;\r\n    const { isValid: isDateValid } = dateState;\r\n\r\n    useEffect(() => {\r\n        // const identifier = setTimeout(() => {\r\n        console.log('Checking for validity...');\r\n        setIsFormValid(isTitleValid && isAmountValid && isDateValid);\r\n        // }, 500);\r\n\r\n        // return () => {\r\n        //     console.log('CLEANUP');\r\n        //     clearTimeout(identifier);\r\n        // };\r\n    }, [isTitleValid, isAmountValid, isDateValid]);\r\n\r\n    const onTitleChangeEventHandler = e => {\r\n        titleDispatcher({\r\n            type: 'ADD_NEW',\r\n            value: e.target.value\r\n        });\r\n\r\n        setIsFormValid(\r\n            e.target.value.trim().length &&\r\n                amountState.isValid &&\r\n                dateState.isValid\r\n        );\r\n    };\r\n    const onAmountChangeEventHandler = e => {\r\n        amountDispatcher({\r\n            type: 'ADD_NEW',\r\n            value: e.target.value\r\n        });\r\n        setIsFormValid(\r\n            titleState.isValid &&\r\n                +e.target.value.trim() > 0 &&\r\n                dateState.isValid\r\n        );\r\n    };\r\n    const onDateChangeEventHandler = e => {\r\n        dateDispatcher({\r\n            type: 'ADD_NEW',\r\n            value: e.target.value\r\n        });\r\n\r\n        setIsFormValid(\r\n            titleState.isValid && amountState.isValid && e.target.value !== ''\r\n        );\r\n    };\r\n\r\n    const onTitleBlurEventHandler = e => {\r\n        titleDispatcher({\r\n            type: 'ON_BLUR',\r\n            value: e.target.value\r\n        });\r\n    };\r\n\r\n    const onAmountBlurEventHandler = e => {\r\n        amountDispatcher({\r\n            type: 'ON_BLUR',\r\n            value: e.target.value\r\n        });\r\n    };\r\n\r\n    const onDateBlurEventHandler = e => {\r\n        dateDispatcher({\r\n            type: 'ON_BLUR',\r\n            value: e.target.value\r\n        });\r\n    };\r\n\r\n    const onSubmitEventHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const newExpense = {\r\n            title: titleState.value,\r\n            amount: amountState.value,\r\n            date: new Date(dateState.value)\r\n        };\r\n\r\n        props.onSubmitExpenseForm(newExpense);\r\n    };\r\n\r\n    const onCancelClicked = () => {\r\n        props.onCancelEventListener(true);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"expense-form\">\r\n            <form onSubmit={onSubmitEventHandler}>\r\n                <div className=\"form-input\">\r\n                    <div className=\"form-controller\">\r\n                        <label\r\n                            className=\"b\"\r\n                            style={{\r\n                                color: `${\r\n                                    titleState.isValid === false\r\n                                        ? '#fa593d'\r\n                                        : '#fff'\r\n                                }`\r\n                            }}\r\n                            htmlFor=\"title\"\r\n                        >\r\n                            Title <span className=\"required\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={titleState.value}\r\n                            onChange={onTitleChangeEventHandler}\r\n                            onBlur={onTitleBlurEventHandler}\r\n                            style={{\r\n                                borderColor: `${\r\n                                    titleState.isValid === false\r\n                                        ? '#fa593d'\r\n                                        : '#03c88d'\r\n                                }`\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-controller\">\r\n                        <label\r\n                            className=\"b\"\r\n                            htmlFor=\"amount\"\r\n                            style={{\r\n                                color: `${\r\n                                    amountState.isValid === false\r\n                                        ? '#fa593d'\r\n                                        : '#fff'\r\n                                }`\r\n                            }}\r\n                        >\r\n                            Amount <span className=\"required\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            min=\"0.1\"\r\n                            step=\"0.1\"\r\n                            value={amountState.value}\r\n                            onChange={onAmountChangeEventHandler}\r\n                            onBlur={onAmountBlurEventHandler}\r\n                            style={{\r\n                                borderColor: `${\r\n                                    amountState.isValid === false\r\n                                        ? '#fa593d'\r\n                                        : '#03c88d'\r\n                                }`\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-controller\">\r\n                        <label\r\n                            className=\"b\"\r\n                            htmlFor=\"date\"\r\n                            style={{\r\n                                color: `${\r\n                                    dateState.isValid === false\r\n                                        ? '#fa593d'\r\n                                        : '#fff'\r\n                                }`\r\n                            }}\r\n                        >\r\n                            Date <span className=\"required\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"date\"\r\n                            value={dateState.value}\r\n                            onChange={onDateChangeEventHandler}\r\n                            onBlur={onDateBlurEventHandler}\r\n                            style={{\r\n                                borderColor: `${\r\n                                    dateState.isValid === false\r\n                                        ? '#fa593d'\r\n                                        : '#03c88d'\r\n                                }`\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"new-expense-buttons\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={onCancelClicked}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={!isFormValid}\r\n                        className=\"btn btn-secondary\"\r\n                    >\r\n                        Add Expense\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nimport './NewExpense.scss';\r\n\r\nconst NewExpense = props => {\r\n    const [newExpenseToggleButton, setNewExpenseToggleButton] = useState(false);\r\n\r\n    const onExpenseSubmitFormHandler = newExpenseData => {\r\n        props.onAddNewExpense({ id: Math.random(), ...newExpenseData });\r\n        setNewExpenseToggleButton(false);\r\n    };\r\n\r\n    const onButtonClickHandler = () => {\r\n        setNewExpenseToggleButton(\r\n            newExpenseToggleButton => !newExpenseToggleButton\r\n        );\r\n    };\r\n\r\n    const onCancelEventListener = isClicked => {\r\n        setNewExpenseToggleButton(!isClicked);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"new-expense bg-dark p-2 my-2\">\r\n            {(!newExpenseToggleButton && (\r\n                <button\r\n                    className=\"btn btn-secondary add-expense-toggle\"\r\n                    onClick={onButtonClickHandler}\r\n                >\r\n                    Add New Expense\r\n                </button>\r\n            )) || (\r\n                <ExpenseForm\r\n                    onSubmitExpenseForm={onExpenseSubmitFormHandler}\r\n                    onCancelEventListener={onCancelEventListener}\r\n                />\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from 'react';\nimport Expense from './components/Expenses/Expense';\nimport NewExpense from './components/Expenses/NewExpense';\n\nimport './App.scss';\n\nfunction App() {\n    const [expenses, setExpenses] = useState([]);\n    const onAddNewExpense = newExpense => {\n        console.log('onAddNewExpense : ', newExpense);\n        setExpenses(prevState => [newExpense, ...prevState]);\n        console.log('new expenses list : ', expenses);\n    };\n\n    return (\n        <div className=\"app my-1\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1 className=\"text-center uppercase py-1\">\n                        Expense Tracker\n                    </h1>\n                    <div className=\"underline\"></div>\n                </div>\n                <NewExpense onAddNewExpense={onAddNewExpense} />\n                <Expense expenses={expenses} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}